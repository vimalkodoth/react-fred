{"ast":null,"code":"import _classCallCheck from \"/Users/vimal_m/Desktop/react-fred/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vimal_m/Desktop/react-fred/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vimal_m/Desktop/react-fred/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vimal_m/Desktop/react-fred/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vimal_m/Desktop/react-fred/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vimal_m/Desktop/react-fred/src/components/Line.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport * as d3 from 'd3';\n\nvar Line =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Line, _Component);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Line).apply(this, arguments));\n  }\n\n  _createClass(Line, [{\n    key: \"drawChart\",\n    value: function drawChart(data) {\n      // set the dimensions and margins of the graph\n      var that = this;\n\n      if (!this.props.data.length && !data) {\n        return;\n      }\n\n      var data = this.props.data.length ? this.props.data : data;\n      var filtered = [];\n      data[0].observations.filter(function (obsA) {\n        return data[1].observations.some(function (obsB) {\n          if (obsA.date === obsB.date) {\n            filtered.push({\n              date: d3.timeParse(\"%Y-%m-%d\")(obsA.date),\n              value: !isNaN(obsA.value) ? +(obsA.value - obsB.value).toFixed(2) : 0\n            });\n            return true;\n          }\n\n          return false;\n        });\n      });\n      data = filtered;\n      var margin = {\n        top: 10,\n        right: 30,\n        bottom: 50,\n        left: 50\n      },\n          width = 800 - margin.left - margin.right,\n          height = 400 - margin.top - margin.bottom; // append the svg object to the body of the page\n\n      var svg = d3.select(\"#line_chart\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); // Add X axis\n\n      var xScale = d3.scaleTime().domain(d3.extent(data, function (d) {\n        return d.date;\n      })).range([0, width]);\n      svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(xScale).tickFormat(d3.timeFormat(\"%Y-%m\"))).selectAll(\"text\").style(\"text-anchor\", \"end\").attr(\"dx\", \"-.8em\").attr(\"dy\", \"-.55em\").attr(\"transform\", \"rotate(-90)\"); // Add Y axis\n\n      var yScale = d3.scaleLinear().domain([0, d3.max(data, function (d) {\n        return +d.value;\n      })]).range([height, 0]);\n      svg.append(\"g\").call(d3.axisLeft(yScale));\n      var line = d3.line().x(function (d) {\n        return xScale(d.date);\n      }).y(function (d) {\n        return yScale(d.value);\n      });\n      svg.append(\"path\").datum(data).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-linejoin\", \"round\").attr(\"stroke-linecap\", \"round\").attr(\"stroke-width\", 1.5).attr(\"d\", line);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.drawChart();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.drawChart(nextProps.data);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"line_chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Line;\n}(Component);\n\nexport default Line;","map":{"version":3,"sources":["/Users/vimal_m/Desktop/react-fred/src/components/Line.js"],"names":["React","Component","d3","Line","data","that","props","length","filtered","observations","filter","obsA","some","obsB","date","push","timeParse","value","isNaN","toFixed","margin","top","right","bottom","left","width","height","svg","select","append","attr","xScale","scaleTime","domain","extent","d","range","call","axisBottom","tickFormat","timeFormat","selectAll","style","yScale","scaleLinear","max","axisLeft","line","x","y","datum","drawChart","nextProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport * as d3 from 'd3';\n\nclass Line extends Component {\n\n\tdrawChart(data){\n\t\t// set the dimensions and margins of the graph\n\t\tvar that = this;\n\t\tif(!this.props.data.length && !data){\n\t\t\treturn;\n\t\t}\n\t\tvar data = this.props.data.length ? this.props.data : data;\n\t\tvar filtered = [];\n\t\t\n\t\tdata[0].observations.filter(function(obsA){\n\t\t\treturn data[1].observations\n\t\t\t\t.some(function(obsB){\n\t\t\t\t\tif(obsA.date === obsB.date){\n\t\t\t\t\t\tfiltered.push({\n\t\t\t\t\t\t\tdate : d3.timeParse(\"%Y-%m-%d\")(obsA.date),\n\t\t\t\t\t\t\tvalue : !isNaN(obsA.value) ? +(obsA.value - obsB.value).toFixed(2) : 0\n\t\t\t\t\t\t})\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t})\n\t\t});\n\t\t\n\t\tdata = filtered;\n\n\t\tvar margin = {top: 10, right: 30, bottom: 50, left: 50},\n\t\t    width = 800 - margin.left - margin.right,\n\t\t    height = 400 - margin.top - margin.bottom;\n\t\t\n\t\t// append the svg object to the body of the page\n\t\tvar svg = d3.select(\"#line_chart\")\n\t\t  .append(\"svg\")\n\t\t    .attr(\"width\", width + margin.left + margin.right)\n\t\t    .attr(\"height\", height + margin.top + margin.bottom)\n\t\t    .append(\"g\")\n\t\t    .attr(\"transform\",\n\t\t          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t\t// Add X axis\n\t    var xScale = d3.scaleTime()\n\t      .domain(d3.extent(data, function(d) { return d.date; }))\n\t      .range([ 0, width ]);\n\t\t\tsvg.append(\"g\")\n\t\t\t\t.attr(\"transform\", \"translate(0,\" + height + \")\")\n\t\t\t\t.call(d3.axisBottom(xScale).tickFormat(d3.timeFormat(\"%Y-%m\")))\n\t\t\t\t.selectAll(\"text\")\n\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t.attr(\"dx\", \"-.8em\")\n\t\t\t\t.attr(\"dy\", \"-.55em\")\n\t\t\t\t.attr(\"transform\", \"rotate(-90)\" );\n\n\n\t    // Add Y axis\n\t    var yScale = d3.scaleLinear()\n\t      .domain([0, d3.max(data, function(d) { return +d.value; })])\n\t      .range([ height, 0 ]);\n\t    svg.append(\"g\")\n\t      .call(d3.axisLeft(yScale));\n\n\t    var line = d3.line()\n\t\t   .x(function(d) { return xScale(d.date)})\n\t\t   .y(function(d) { return yScale(d.value)})\n\n\t\tsvg.append(\"path\")\n\t\t\t.datum(data)\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.attr(\"stroke\", \"steelblue\")\n\t\t\t.attr(\"stroke-linejoin\", \"round\")\n\t\t\t.attr(\"stroke-linecap\", \"round\")\n\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t.attr(\"d\", line);\n\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.drawChart();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.drawChart(nextProps.data);\n\t}\n\n\trender() {\n\t\treturn <div id=\"line_chart\"></div>\n\t}\n}\n\nexport default Line;"]},"metadata":{},"sourceType":"module"}