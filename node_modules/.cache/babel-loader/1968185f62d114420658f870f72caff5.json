{"ast":null,"code":"import _toConsumableArray from \"/Users/vimal_m/Desktop/react-fred/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/vimal_m/Desktop/react-fred/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vimal_m/Desktop/react-fred/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vimal_m/Desktop/react-fred/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vimal_m/Desktop/react-fred/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vimal_m/Desktop/react-fred/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vimal_m/Desktop/react-fred/src/components/Graph.js\";\nimport React, { Component } from 'react';\nimport Shaded from './Shaded';\nimport Bar from './Bar';\nimport Line from './Line';\nimport { getObservationsBySeriesId } from '../services/dataService';\nimport config from '../config/config';\n\nvar Graph =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Graph, _Component);\n\n  function Graph(props) {\n    var _this;\n\n    _classCallCheck(this, Graph);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Graph).call(this, props));\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(Graph, [{\n    key: \"clearData\",\n    value: function clearData() {\n      this.setState({\n        data: []\n      });\n    }\n  }, {\n    key: \"getSeriesId\",\n    value: function getSeriesId(type) {\n      return config['SERIES_ID'][type];\n    }\n  }, {\n    key: \"getObservationsById\",\n    value: function getObservationsById(seriesId) {\n      return getObservationsBySeriesId(seriesId);\n    }\n  }, {\n    key: \"fetchContentByType\",\n    value: function fetchContentByType(type) {\n      var _this2 = this;\n\n      var ids = this.getSeriesId(type).split('-');\n      var ids = ids.map(function (id) {\n        return _this2.getObservationsById(id);\n      });\n      return ids.reduce(function (promiseChain, currentTask) {\n        return promiseChain.then(function (chainResults) {\n          return currentTask.then(function (currentResult) {\n            return [].concat(_toConsumableArray(chainResults), [currentResult]);\n          });\n        });\n      }, Promise.resolve([])).then(function (arrayOfResults) {\n        _this2.setState({\n          data: arrayOfResults\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchContentByType(this.props.type);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.clearData();\n      this.fetchContentByType(nextProps.type);\n    }\n  }, {\n    key: \"renderComponent\",\n    value: function renderComponent() {\n      switch (this.props.type) {\n        case 'shaded':\n          return React.createElement(Shaded, {\n            data: this.state.data,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          });\n\n        case 'bar':\n          return React.createElement(Bar, {\n            data: this.state.data,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          });\n\n        case 'line':\n          return React.createElement(Line, {\n            data: this.state.data,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          });\n\n        default:\n          return 'No component to render';\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.renderComponent();\n    }\n  }]);\n\n  return Graph;\n}(Component);\n\nexport default Graph;","map":{"version":3,"sources":["/Users/vimal_m/Desktop/react-fred/src/components/Graph.js"],"names":["React","Component","Shaded","Bar","Line","getObservationsBySeriesId","config","Graph","props","state","data","setState","type","seriesId","ids","getSeriesId","split","map","id","getObservationsById","reduce","promiseChain","currentTask","then","chainResults","currentResult","Promise","resolve","arrayOfResults","fetchContentByType","nextProps","clearData","renderComponent"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,yBAAT,QAA0C,yBAA1C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;IAEMC,K;;;;;AAEJ,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAG;AADI,KAAb;AAFgB;AAKjB;;;;gCAEW;AACV,WAAKC,QAAL,CAAc;AAACD,QAAAA,IAAI,EAAG;AAAR,OAAd;AACD;;;gCAEWE,I,EAAK;AACf,aAAON,MAAM,CAAC,WAAD,CAAN,CAAoBM,IAApB,CAAP;AACD;;;wCAEmBC,Q,EAAS;AAC3B,aAAOR,yBAAyB,CAACQ,QAAD,CAAhC;AACD;;;uCAEkBD,I,EAAK;AAAA;;AACtB,UAAIE,GAAG,GAAG,KAAKC,WAAL,CAAiBH,IAAjB,EAAuBI,KAAvB,CAA6B,GAA7B,CAAV;AACA,UAAIF,GAAG,GAAGA,GAAG,CAACG,GAAJ,CAAQ,UAACC,EAAD,EAAQ;AACxB,eAAO,MAAI,CAACC,mBAAL,CAAyBD,EAAzB,CAAP;AACD,OAFS,CAAV;AAIA,aAAOJ,GAAG,CAACM,MAAJ,CAAW,UAACC,YAAD,EAAeC,WAAf,EAA+B;AAC/C,eAAOD,YAAY,CAACE,IAAb,CAAkB,UAAAC,YAAY;AAAA,iBACjCF,WAAW,CAACC,IAAZ,CAAiB,UAAAE,aAAa;AAAA,gDACrBD,YADqB,IACPC,aADO;AAAA,WAA9B,CADiC;AAAA,SAA9B,CAAP;AAKD,OANM,EAMJC,OAAO,CAACC,OAAR,CAAgB,EAAhB,CANI,EAMiBJ,IANjB,CAMsB,UAAAK,cAAc,EAAI;AACzC,QAAA,MAAI,CAACjB,QAAL,CAAc;AACVD,UAAAA,IAAI,EAAGkB;AADG,SAAd;AAGL,OAVM,CAAP;AAWD;;;wCAGmB;AAClB,WAAKC,kBAAL,CAAwB,KAAKrB,KAAL,CAAWI,IAAnC;AACD;;;8CAEyBkB,S,EAAW;AACnC,WAAKC,SAAL;AACA,WAAKF,kBAAL,CAAwBC,SAAS,CAAClB,IAAlC;AACD;;;sCAEgB;AACf,cAAO,KAAKJ,KAAL,CAAWI,IAAlB;AACE,aAAK,QAAL;AACE,iBAAO,oBAAC,MAAD;AAAQ,YAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;;AACF,aAAK,KAAL;AACE,iBAAO,oBAAC,GAAD;AAAK,YAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;;AACF,aAAK,MAAL;AACE,iBAAO,oBAAC,IAAD;AAAM,YAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;;AAEF;AACE,iBAAO,wBAAP;AATJ;AAWD;;;6BAEQ;AACP,aACE,KAAKsB,eAAL,EADF;AAGD;;;;EApEiB/B,S;;AAuEpB,eAAeM,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport Shaded from './Shaded';\nimport Bar from './Bar';\nimport Line from './Line';\nimport { getObservationsBySeriesId } from '../services/dataService';\nimport config from '../config/config';\n\nclass Graph extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      data : []\n    };\n  }\n\n  clearData() {\n    this.setState({data : []});\n  }\n\n  getSeriesId(type){\n    return config['SERIES_ID'][type]\n  }\n\n  getObservationsById(seriesId){\n    return getObservationsBySeriesId(seriesId);\n  }\n\n  fetchContentByType(type){\n    var ids = this.getSeriesId(type).split('-');\n    var ids = ids.map((id) => {\n      return this.getObservationsById(id)\n    });\n\n    return ids.reduce((promiseChain, currentTask) => {\n      return promiseChain.then(chainResults =>\n          currentTask.then(currentResult =>\n              [ ...chainResults, currentResult ]\n          )\n      );\n    }, Promise.resolve([])).then(arrayOfResults => {\n          this.setState({        \n              data : arrayOfResults\n          });\n    });\n  }\n\n  \n  componentDidMount() {\n    this.fetchContentByType(this.props.type);\n  }\n  \n  componentWillReceiveProps(nextProps) {\n    this.clearData();\n    this.fetchContentByType(nextProps.type);\n  }\n\n  renderComponent(){\n    switch(this.props.type){\n      case 'shaded': \n        return <Shaded data={this.state.data} />;\n      case 'bar': \n        return <Bar data={this.state.data} />; \n      case 'line': \n        return <Line data={this.state.data} />\n\n      default:\n        return 'No component to render';\n    }\n  }\n\n  render() {\n    return (\n      this.renderComponent()\n    );\n  }\n}\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}