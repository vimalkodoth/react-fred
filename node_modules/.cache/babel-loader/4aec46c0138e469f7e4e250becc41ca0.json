{"ast":null,"code":"import axios from 'axios';\nimport config from '../config/config';\n\nfunction getObservationsBySeriesId(seriesId, startTime, endTime, optionParams) {\n  startTime = startTime || '2000-08-14';\n  endTime = endTime || '2020-08-13';\n  var optionals = config['API_OPTIONAL_PARAMS'][seriesId];\n  var url = \"/fred/series/observations?file_type=json&api_key=\".concat(config.API_KEY, \"&series_id=\").concat(seriesId, \"&observation_start=\").concat(startTime, \"&observation_end=\").concat(endTime);\n\n  if (optionals) {\n    for (var param in optionals) {\n      url += '&' + param + '=' + optionals[param];\n    }\n  }\n\n  return axios.get(url).then(function (response) {\n    return response.data;\n  });\n}\n\nexport { getObservationsBySeriesId };","map":{"version":3,"sources":["/Users/vimal_m/Desktop/react-fred/src/services/dataService.js"],"names":["axios","config","getObservationsBySeriesId","seriesId","startTime","endTime","optionParams","optionals","url","API_KEY","param","get","then","response","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,SAASC,yBAAT,CAAmCC,QAAnC,EAA6CC,SAA7C,EAAwDC,OAAxD,EAAiEC,YAAjE,EAA8E;AAC7EF,EAAAA,SAAS,GAAGA,SAAS,IAAI,YAAzB;AACAC,EAAAA,OAAO,GAAGA,OAAO,IAAI,YAArB;AACA,MAAIE,SAAS,GAAGN,MAAM,CAAC,qBAAD,CAAN,CAA8BE,QAA9B,CAAhB;AACA,MAAIK,GAAG,8DAAuDP,MAAM,CAACQ,OAA9D,wBAAmFN,QAAnF,gCAAiHC,SAAjH,8BAA8IC,OAA9I,CAAP;;AACA,MAAGE,SAAH,EAAa;AACZ,SAAI,IAAIG,KAAR,IAAiBH,SAAjB,EAA2B;AAC1BC,MAAAA,GAAG,IAAI,MAAIE,KAAJ,GAAU,GAAV,GAAcH,SAAS,CAACG,KAAD,CAA9B;AACA;AACD;;AACC,SAAOV,KAAK,CAACW,GAAN,CAAUH,GAAV,EAAeI,IAAf,CAAoB,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAb;AAAA,GAA5B,CAAP;AACF;;AAED,SAASZ,yBAAT","sourcesContent":["import axios from 'axios';\nimport config from '../config/config';\n\nfunction getObservationsBySeriesId(seriesId, startTime, endTime, optionParams){\n\tstartTime = startTime || '2000-08-14';\n\tendTime = endTime || '2020-08-13';\n\tvar optionals = config['API_OPTIONAL_PARAMS'][seriesId];\n\tlet url = `/fred/series/observations?file_type=json&api_key=${config.API_KEY}&series_id=${seriesId}&observation_start=${startTime}&observation_end=${endTime}`;\n\tif(optionals){\n\t\tfor(var param in optionals){\n\t\t\turl += '&'+param+'='+optionals[param];\n\t\t}\n\t}\n  \treturn axios.get(url).then(response => response.data);\n}\n\nexport { getObservationsBySeriesId }"]},"metadata":{},"sourceType":"module"}